Terminals unused in grammar

   MAIN


State 0 conflicts: 1 shift/reduce
State 4 conflicts: 1 shift/reduce, 1 reduce/reduce
State 27 conflicts: 7 shift/reduce
State 37 conflicts: 7 shift/reduce, 1 reduce/reduce
State 52 conflicts: 2 shift/reduce
State 53 conflicts: 2 shift/reduce
State 62 conflicts: 6 shift/reduce
State 63 conflicts: 4 shift/reduce
State 116 conflicts: 2 shift/reduce
State 117 conflicts: 4 shift/reduce
State 122 conflicts: 7 shift/reduce
State 123 conflicts: 7 shift/reduce
State 158 conflicts: 7 shift/reduce
State 160 conflicts: 7 shift/reduce


Grammar

    0 $accept: s $end

    1 s: procedures

    2 procedures: procedure procedures
    3           | procedure

    4 procedure: PROCEDURE ID '(' parameter ')' RETURN returnType '{' stmts '}'
    5          | %empty

    6 stmts: stmt stmts
    7      | stmt

    8 stmt: lhs '=' exprs ';'
    9     | lhs '=' ID '(' arguments ')' ';'
   10     | ifelseStmt
   11     | ifnoelseStmt
   12     | whileStmt
   13     | PROCEDURE ID '(' parameter ')' RETURN type '{' stmts '}'
   14     | VAR ID idPrime ':' declareType ';'
   15     | RETURN exprs ';'
   16     | %empty

   17 exprs: NULLX
   18      | ID sbarket
   19      | '&' lhs
   20      | STRINGV
   21      | CHARV
   22      | numExprs
   23      | boolExpr

   24 lhs: ID sbarket
   25    | ID
   26    | '^' ID

   27 sbarket: '[' numExprs ']'

   28 cop: EQ
   29    | GE
   30    | LE
   31    | NEQ
   32    | '>'
   33    | '<'

   34 aop: '+'
   35    | '-'
   36    | '*'
   37    | '/'

   38 type: BOOLEAN
   39     | INTEGER
   40     | CHAR
   41     | CHARPTR
   42     | STRING
   43     | INTPTR

   44 returnType: BOOLEAN
   45           | INTEGER
   46           | CHAR
   47           | CHARPTR
   48           | INTPTR

   49 declareType: BOOLEAN
   50            | INTEGER
   51            | CHAR
   52            | CHARPTR
   53            | INTPTR
   54            | STRING '[' NUMBER ']'

   55 numExprs: factor termPrime

   56 term: ID
   57     | NUMBER
   58     | '^' exprs
   59     | '-' term

   60 termPrime: aop factor termPrime
   61          | %empty

   62 factor: term
   63       | '(' numExprs ')'
   64       | '|' numExprs '|'

   65 arguments: exprs argumentsPrime
   66          | %empty

   67 argumentsPrime: ',' exprs argumentsPrime
   68               | %empty

   69 boolExpr: term cop term conditions
   70         | TRUE conditions
   71         | FALSE conditions
   72         | '!' boolExpr

   73 conditions: AND boolExpr
   74           | OR boolExpr
   75           | %empty

   76 parameter: ID idPrime ':' returnType parameterPrime
   77          | %empty

   78 parameterPrime: ';' ID idPrime ':' returnType parameterPrime
   79               | %empty

   80 idPrime: ',' ID idPrime
   81        | %empty

   82 ifelseStmt: IF '(' boolExpr ')' '{' stmts '}' ELSE '{' stmts '}'

   83 ifnoelseStmt: IF '(' boolExpr ')' '{' stmts '}'

   84 whileStmt: WHILE '(' boolExpr ')' '{' stmts '}'


Terminals, with rules where they appear

$end (0) 0
'!' (33) 72
'&' (38) 19
'(' (40) 4 9 13 63 82 83 84
')' (41) 4 9 13 63 82 83 84
'*' (42) 36
'+' (43) 34
',' (44) 67 80
'-' (45) 35 59
'/' (47) 37
':' (58) 14 76 78
';' (59) 8 9 14 15 78
'<' (60) 33
'=' (61) 8 9
'>' (62) 32
'[' (91) 27 54
']' (93) 27 54
'^' (94) 26 58
'{' (123) 4 13 82 83 84
'|' (124) 64
'}' (125) 4 13 82 83 84
error (256)
MAIN (258)
BOOLEAN (259) 38 44 49
CHAR (260) 40 46 51
INTEGER (261) 39 45 50
STRING (262) 42 54
INTPTR (263) 43 48 53
CHARPTR (264) 41 47 52
IF (265) 82 83
ELSE (266) 82
WHILE (267) 84
VAR (268) 14
PROCEDURE (269) 4 13
RETURN (270) 4 13 15
ID (271) 4 9 13 14 18 24 25 26 56 76 78 80
NULLX (272) 17
NUMBER (273) 54 57
AND (274) 73
OR (275) 74
STRINGV (276) 20
CHARV (277) 21
TRUE (278) 70
FALSE (279) 71
NEQ (280) 31
LE (281) 30
GE (282) 29
EQ (283) 28
Dummy (284)


Nonterminals, with rules where they appear

$accept (50)
    on left: 0
s (51)
    on left: 1, on right: 0
procedures (52)
    on left: 2 3, on right: 1 2
procedure (53)
    on left: 4 5, on right: 2 3
stmts (54)
    on left: 6 7, on right: 4 6 13 82 83 84
stmt (55)
    on left: 8 9 10 11 12 13 14 15 16, on right: 6 7
exprs (56)
    on left: 17 18 19 20 21 22 23, on right: 8 15 58 65 67
lhs (57)
    on left: 24 25 26, on right: 8 9 19
sbarket (58)
    on left: 27, on right: 18 24
cop (59)
    on left: 28 29 30 31 32 33, on right: 69
aop (60)
    on left: 34 35 36 37, on right: 60
type (61)
    on left: 38 39 40 41 42 43, on right: 13
returnType (62)
    on left: 44 45 46 47 48, on right: 4 76 78
declareType (63)
    on left: 49 50 51 52 53 54, on right: 14
numExprs (64)
    on left: 55, on right: 22 27 63 64
term (65)
    on left: 56 57 58 59, on right: 59 62 69
termPrime (66)
    on left: 60 61, on right: 55 60
factor (67)
    on left: 62 63 64, on right: 55 60
arguments (68)
    on left: 65 66, on right: 9
argumentsPrime (69)
    on left: 67 68, on right: 65 67
boolExpr (70)
    on left: 69 70 71 72, on right: 23 72 73 74 82 83 84
conditions (71)
    on left: 73 74 75, on right: 69 70 71
parameter (72)
    on left: 76 77, on right: 4 13
parameterPrime (73)
    on left: 78 79, on right: 76 78
idPrime (74)
    on left: 80 81, on right: 14 76 78 80
ifelseStmt (75)
    on left: 82, on right: 10
ifnoelseStmt (76)
    on left: 83, on right: 11
whileStmt (77)
    on left: 84, on right: 12


State 0

    0 $accept: . s $end

    PROCEDURE  shift, and go to state 1

    PROCEDURE  [reduce using rule 5 (procedure)]
    $default   reduce using rule 5 (procedure)

    s           go to state 2
    procedures  go to state 3
    procedure   go to state 4


State 1

    4 procedure: PROCEDURE . ID '(' parameter ')' RETURN returnType '{' stmts '}'

    ID  shift, and go to state 5


State 2

    0 $accept: s . $end

    $end  shift, and go to state 6


State 3

    1 s: procedures .

    $default  reduce using rule 1 (s)


State 4

    2 procedures: procedure . procedures
    3           | procedure .

    PROCEDURE  shift, and go to state 1

    $end       reduce using rule 3 (procedures)
    $end       [reduce using rule 5 (procedure)]
    PROCEDURE  [reduce using rule 5 (procedure)]
    $default   reduce using rule 3 (procedures)

    procedures  go to state 7
    procedure   go to state 4


State 5

    4 procedure: PROCEDURE ID . '(' parameter ')' RETURN returnType '{' stmts '}'

    '('  shift, and go to state 8


State 6

    0 $accept: s $end .

    $default  accept


State 7

    2 procedures: procedure procedures .

    $default  reduce using rule 2 (procedures)


State 8

    4 procedure: PROCEDURE ID '(' . parameter ')' RETURN returnType '{' stmts '}'

    ID  shift, and go to state 9

    $default  reduce using rule 77 (parameter)

    parameter  go to state 10


State 9

   76 parameter: ID . idPrime ':' returnType parameterPrime

    ','  shift, and go to state 11

    $default  reduce using rule 81 (idPrime)

    idPrime  go to state 12


State 10

    4 procedure: PROCEDURE ID '(' parameter . ')' RETURN returnType '{' stmts '}'

    ')'  shift, and go to state 13


State 11

   80 idPrime: ',' . ID idPrime

    ID  shift, and go to state 14


State 12

   76 parameter: ID idPrime . ':' returnType parameterPrime

    ':'  shift, and go to state 15


State 13

    4 procedure: PROCEDURE ID '(' parameter ')' . RETURN returnType '{' stmts '}'

    RETURN  shift, and go to state 16


State 14

   80 idPrime: ',' ID . idPrime

    ','  shift, and go to state 11

    $default  reduce using rule 81 (idPrime)

    idPrime  go to state 17


State 15

   76 parameter: ID idPrime ':' . returnType parameterPrime

    BOOLEAN  shift, and go to state 18
    CHAR     shift, and go to state 19
    INTEGER  shift, and go to state 20
    INTPTR   shift, and go to state 21
    CHARPTR  shift, and go to state 22

    returnType  go to state 23


State 16

    4 procedure: PROCEDURE ID '(' parameter ')' RETURN . returnType '{' stmts '}'

    BOOLEAN  shift, and go to state 18
    CHAR     shift, and go to state 19
    INTEGER  shift, and go to state 20
    INTPTR   shift, and go to state 21
    CHARPTR  shift, and go to state 22

    returnType  go to state 24


State 17

   80 idPrime: ',' ID idPrime .

    $default  reduce using rule 80 (idPrime)


State 18

   44 returnType: BOOLEAN .

    $default  reduce using rule 44 (returnType)


State 19

   46 returnType: CHAR .

    $default  reduce using rule 46 (returnType)


State 20

   45 returnType: INTEGER .

    $default  reduce using rule 45 (returnType)


State 21

   48 returnType: INTPTR .

    $default  reduce using rule 48 (returnType)


State 22

   47 returnType: CHARPTR .

    $default  reduce using rule 47 (returnType)


State 23

   76 parameter: ID idPrime ':' returnType . parameterPrime

    ';'  shift, and go to state 25

    $default  reduce using rule 79 (parameterPrime)

    parameterPrime  go to state 26


State 24

    4 procedure: PROCEDURE ID '(' parameter ')' RETURN returnType . '{' stmts '}'

    '{'  shift, and go to state 27


State 25

   78 parameterPrime: ';' . ID idPrime ':' returnType parameterPrime

    ID  shift, and go to state 28


State 26

   76 parameter: ID idPrime ':' returnType parameterPrime .

    $default  reduce using rule 76 (parameter)


State 27

    4 procedure: PROCEDURE ID '(' parameter ')' RETURN returnType '{' . stmts '}'

    IF         shift, and go to state 29
    WHILE      shift, and go to state 30
    VAR        shift, and go to state 31
    PROCEDURE  shift, and go to state 32
    RETURN     shift, and go to state 33
    ID         shift, and go to state 34
    '^'        shift, and go to state 35

    IF         [reduce using rule 16 (stmt)]
    WHILE      [reduce using rule 16 (stmt)]
    VAR        [reduce using rule 16 (stmt)]
    PROCEDURE  [reduce using rule 16 (stmt)]
    RETURN     [reduce using rule 16 (stmt)]
    ID         [reduce using rule 16 (stmt)]
    '^'        [reduce using rule 16 (stmt)]
    $default   reduce using rule 16 (stmt)

    stmts         go to state 36
    stmt          go to state 37
    lhs           go to state 38
    ifelseStmt    go to state 39
    ifnoelseStmt  go to state 40
    whileStmt     go to state 41


State 28

   78 parameterPrime: ';' ID . idPrime ':' returnType parameterPrime

    ','  shift, and go to state 11

    $default  reduce using rule 81 (idPrime)

    idPrime  go to state 42


State 29

   82 ifelseStmt: IF . '(' boolExpr ')' '{' stmts '}' ELSE '{' stmts '}'
   83 ifnoelseStmt: IF . '(' boolExpr ')' '{' stmts '}'

    '('  shift, and go to state 43


State 30

   84 whileStmt: WHILE . '(' boolExpr ')' '{' stmts '}'

    '('  shift, and go to state 44


State 31

   14 stmt: VAR . ID idPrime ':' declareType ';'

    ID  shift, and go to state 45


State 32

   13 stmt: PROCEDURE . ID '(' parameter ')' RETURN type '{' stmts '}'

    ID  shift, and go to state 46


State 33

   15 stmt: RETURN . exprs ';'

    ID       shift, and go to state 47
    NULLX    shift, and go to state 48
    NUMBER   shift, and go to state 49
    STRINGV  shift, and go to state 50
    CHARV    shift, and go to state 51
    TRUE     shift, and go to state 52
    FALSE    shift, and go to state 53
    '-'      shift, and go to state 54
    '('      shift, and go to state 55
    '&'      shift, and go to state 56
    '^'      shift, and go to state 57
    '|'      shift, and go to state 58
    '!'      shift, and go to state 59

    exprs     go to state 60
    numExprs  go to state 61
    term      go to state 62
    factor    go to state 63
    boolExpr  go to state 64


State 34

   24 lhs: ID . sbarket
   25    | ID .

    '['  shift, and go to state 65

    $default  reduce using rule 25 (lhs)

    sbarket  go to state 66


State 35

   26 lhs: '^' . ID

    ID  shift, and go to state 67


State 36

    4 procedure: PROCEDURE ID '(' parameter ')' RETURN returnType '{' stmts . '}'

    '}'  shift, and go to state 68


State 37

    6 stmts: stmt . stmts
    7      | stmt .

    IF         shift, and go to state 29
    WHILE      shift, and go to state 30
    VAR        shift, and go to state 31
    PROCEDURE  shift, and go to state 32
    RETURN     shift, and go to state 33
    ID         shift, and go to state 34
    '^'        shift, and go to state 35

    IF         [reduce using rule 16 (stmt)]
    WHILE      [reduce using rule 16 (stmt)]
    VAR        [reduce using rule 16 (stmt)]
    PROCEDURE  [reduce using rule 16 (stmt)]
    RETURN     [reduce using rule 16 (stmt)]
    ID         [reduce using rule 16 (stmt)]
    '}'        reduce using rule 7 (stmts)
    '}'        [reduce using rule 16 (stmt)]
    '^'        [reduce using rule 16 (stmt)]
    $default   reduce using rule 7 (stmts)

    stmts         go to state 69
    stmt          go to state 37
    lhs           go to state 38
    ifelseStmt    go to state 39
    ifnoelseStmt  go to state 40
    whileStmt     go to state 41


State 38

    8 stmt: lhs . '=' exprs ';'
    9     | lhs . '=' ID '(' arguments ')' ';'

    '='  shift, and go to state 70


State 39

   10 stmt: ifelseStmt .

    $default  reduce using rule 10 (stmt)


State 40

   11 stmt: ifnoelseStmt .

    $default  reduce using rule 11 (stmt)


State 41

   12 stmt: whileStmt .

    $default  reduce using rule 12 (stmt)


State 42

   78 parameterPrime: ';' ID idPrime . ':' returnType parameterPrime

    ':'  shift, and go to state 71


State 43

   82 ifelseStmt: IF '(' . boolExpr ')' '{' stmts '}' ELSE '{' stmts '}'
   83 ifnoelseStmt: IF '(' . boolExpr ')' '{' stmts '}'

    ID      shift, and go to state 72
    NUMBER  shift, and go to state 49
    TRUE    shift, and go to state 52
    FALSE   shift, and go to state 53
    '-'     shift, and go to state 54
    '^'     shift, and go to state 57
    '!'     shift, and go to state 59

    term      go to state 73
    boolExpr  go to state 74


State 44

   84 whileStmt: WHILE '(' . boolExpr ')' '{' stmts '}'

    ID      shift, and go to state 72
    NUMBER  shift, and go to state 49
    TRUE    shift, and go to state 52
    FALSE   shift, and go to state 53
    '-'     shift, and go to state 54
    '^'     shift, and go to state 57
    '!'     shift, and go to state 59

    term      go to state 73
    boolExpr  go to state 75


State 45

   14 stmt: VAR ID . idPrime ':' declareType ';'

    ','  shift, and go to state 11

    $default  reduce using rule 81 (idPrime)

    idPrime  go to state 76


State 46

   13 stmt: PROCEDURE ID . '(' parameter ')' RETURN type '{' stmts '}'

    '('  shift, and go to state 77


State 47

   18 exprs: ID . sbarket
   56 term: ID .

    '['  shift, and go to state 65

    $default  reduce using rule 56 (term)

    sbarket  go to state 78


State 48

   17 exprs: NULLX .

    $default  reduce using rule 17 (exprs)


State 49

   57 term: NUMBER .

    $default  reduce using rule 57 (term)


State 50

   20 exprs: STRINGV .

    $default  reduce using rule 20 (exprs)


State 51

   21 exprs: CHARV .

    $default  reduce using rule 21 (exprs)


State 52

   70 boolExpr: TRUE . conditions

    AND  shift, and go to state 79
    OR   shift, and go to state 80

    AND       [reduce using rule 75 (conditions)]
    OR        [reduce using rule 75 (conditions)]
    $default  reduce using rule 75 (conditions)

    conditions  go to state 81


State 53

   71 boolExpr: FALSE . conditions

    AND  shift, and go to state 79
    OR   shift, and go to state 80

    AND       [reduce using rule 75 (conditions)]
    OR        [reduce using rule 75 (conditions)]
    $default  reduce using rule 75 (conditions)

    conditions  go to state 82


State 54

   59 term: '-' . term

    ID      shift, and go to state 72
    NUMBER  shift, and go to state 49
    '-'     shift, and go to state 54
    '^'     shift, and go to state 57

    term  go to state 83


State 55

   63 factor: '(' . numExprs ')'

    ID      shift, and go to state 72
    NUMBER  shift, and go to state 49
    '-'     shift, and go to state 54
    '('     shift, and go to state 55
    '^'     shift, and go to state 57
    '|'     shift, and go to state 58

    numExprs  go to state 84
    term      go to state 85
    factor    go to state 63


State 56

   19 exprs: '&' . lhs

    ID   shift, and go to state 34
    '^'  shift, and go to state 35

    lhs  go to state 86


State 57

   58 term: '^' . exprs

    ID       shift, and go to state 47
    NULLX    shift, and go to state 48
    NUMBER   shift, and go to state 49
    STRINGV  shift, and go to state 50
    CHARV    shift, and go to state 51
    TRUE     shift, and go to state 52
    FALSE    shift, and go to state 53
    '-'      shift, and go to state 54
    '('      shift, and go to state 55
    '&'      shift, and go to state 56
    '^'      shift, and go to state 57
    '|'      shift, and go to state 58
    '!'      shift, and go to state 59

    exprs     go to state 87
    numExprs  go to state 61
    term      go to state 62
    factor    go to state 63
    boolExpr  go to state 64


State 58

   64 factor: '|' . numExprs '|'

    ID      shift, and go to state 72
    NUMBER  shift, and go to state 49
    '-'     shift, and go to state 54
    '('     shift, and go to state 55
    '^'     shift, and go to state 57
    '|'     shift, and go to state 58

    numExprs  go to state 88
    term      go to state 85
    factor    go to state 63


State 59

   72 boolExpr: '!' . boolExpr

    ID      shift, and go to state 72
    NUMBER  shift, and go to state 49
    TRUE    shift, and go to state 52
    FALSE   shift, and go to state 53
    '-'     shift, and go to state 54
    '^'     shift, and go to state 57
    '!'     shift, and go to state 59

    term      go to state 73
    boolExpr  go to state 89


State 60

   15 stmt: RETURN exprs . ';'

    ';'  shift, and go to state 90


State 61

   22 exprs: numExprs .

    $default  reduce using rule 22 (exprs)


State 62

   62 factor: term .
   69 boolExpr: term . cop term conditions

    '<'  shift, and go to state 91
    '>'  shift, and go to state 92
    NEQ  shift, and go to state 93
    LE   shift, and go to state 94
    GE   shift, and go to state 95
    EQ   shift, and go to state 96

    '<'       [reduce using rule 62 (factor)]
    '>'       [reduce using rule 62 (factor)]
    NEQ       [reduce using rule 62 (factor)]
    LE        [reduce using rule 62 (factor)]
    GE        [reduce using rule 62 (factor)]
    EQ        [reduce using rule 62 (factor)]
    $default  reduce using rule 62 (factor)

    cop  go to state 97


State 63

   55 numExprs: factor . termPrime

    '+'  shift, and go to state 98
    '-'  shift, and go to state 99
    '*'  shift, and go to state 100
    '/'  shift, and go to state 101

    '+'       [reduce using rule 61 (termPrime)]
    '-'       [reduce using rule 61 (termPrime)]
    '*'       [reduce using rule 61 (termPrime)]
    '/'       [reduce using rule 61 (termPrime)]
    $default  reduce using rule 61 (termPrime)

    aop        go to state 102
    termPrime  go to state 103


State 64

   23 exprs: boolExpr .

    $default  reduce using rule 23 (exprs)


State 65

   27 sbarket: '[' . numExprs ']'

    ID      shift, and go to state 72
    NUMBER  shift, and go to state 49
    '-'     shift, and go to state 54
    '('     shift, and go to state 55
    '^'     shift, and go to state 57
    '|'     shift, and go to state 58

    numExprs  go to state 104
    term      go to state 85
    factor    go to state 63


State 66

   24 lhs: ID sbarket .

    $default  reduce using rule 24 (lhs)


State 67

   26 lhs: '^' ID .

    $default  reduce using rule 26 (lhs)


State 68

    4 procedure: PROCEDURE ID '(' parameter ')' RETURN returnType '{' stmts '}' .

    $default  reduce using rule 4 (procedure)


State 69

    6 stmts: stmt stmts .

    $default  reduce using rule 6 (stmts)


State 70

    8 stmt: lhs '=' . exprs ';'
    9     | lhs '=' . ID '(' arguments ')' ';'

    ID       shift, and go to state 105
    NULLX    shift, and go to state 48
    NUMBER   shift, and go to state 49
    STRINGV  shift, and go to state 50
    CHARV    shift, and go to state 51
    TRUE     shift, and go to state 52
    FALSE    shift, and go to state 53
    '-'      shift, and go to state 54
    '('      shift, and go to state 55
    '&'      shift, and go to state 56
    '^'      shift, and go to state 57
    '|'      shift, and go to state 58
    '!'      shift, and go to state 59

    exprs     go to state 106
    numExprs  go to state 61
    term      go to state 62
    factor    go to state 63
    boolExpr  go to state 64


State 71

   78 parameterPrime: ';' ID idPrime ':' . returnType parameterPrime

    BOOLEAN  shift, and go to state 18
    CHAR     shift, and go to state 19
    INTEGER  shift, and go to state 20
    INTPTR   shift, and go to state 21
    CHARPTR  shift, and go to state 22

    returnType  go to state 107


State 72

   56 term: ID .

    $default  reduce using rule 56 (term)


State 73

   69 boolExpr: term . cop term conditions

    '<'  shift, and go to state 91
    '>'  shift, and go to state 92
    NEQ  shift, and go to state 93
    LE   shift, and go to state 94
    GE   shift, and go to state 95
    EQ   shift, and go to state 96

    cop  go to state 97


State 74

   82 ifelseStmt: IF '(' boolExpr . ')' '{' stmts '}' ELSE '{' stmts '}'
   83 ifnoelseStmt: IF '(' boolExpr . ')' '{' stmts '}'

    ')'  shift, and go to state 108


State 75

   84 whileStmt: WHILE '(' boolExpr . ')' '{' stmts '}'

    ')'  shift, and go to state 109


State 76

   14 stmt: VAR ID idPrime . ':' declareType ';'

    ':'  shift, and go to state 110


State 77

   13 stmt: PROCEDURE ID '(' . parameter ')' RETURN type '{' stmts '}'

    ID  shift, and go to state 9

    $default  reduce using rule 77 (parameter)

    parameter  go to state 111


State 78

   18 exprs: ID sbarket .

    $default  reduce using rule 18 (exprs)


State 79

   73 conditions: AND . boolExpr

    ID      shift, and go to state 72
    NUMBER  shift, and go to state 49
    TRUE    shift, and go to state 52
    FALSE   shift, and go to state 53
    '-'     shift, and go to state 54
    '^'     shift, and go to state 57
    '!'     shift, and go to state 59

    term      go to state 73
    boolExpr  go to state 112


State 80

   74 conditions: OR . boolExpr

    ID      shift, and go to state 72
    NUMBER  shift, and go to state 49
    TRUE    shift, and go to state 52
    FALSE   shift, and go to state 53
    '-'     shift, and go to state 54
    '^'     shift, and go to state 57
    '!'     shift, and go to state 59

    term      go to state 73
    boolExpr  go to state 113


State 81

   70 boolExpr: TRUE conditions .

    $default  reduce using rule 70 (boolExpr)


State 82

   71 boolExpr: FALSE conditions .

    $default  reduce using rule 71 (boolExpr)


State 83

   59 term: '-' term .

    $default  reduce using rule 59 (term)


State 84

   63 factor: '(' numExprs . ')'

    ')'  shift, and go to state 114


State 85

   62 factor: term .

    $default  reduce using rule 62 (factor)


State 86

   19 exprs: '&' lhs .

    $default  reduce using rule 19 (exprs)


State 87

   58 term: '^' exprs .

    $default  reduce using rule 58 (term)


State 88

   64 factor: '|' numExprs . '|'

    '|'  shift, and go to state 115


State 89

   72 boolExpr: '!' boolExpr .

    $default  reduce using rule 72 (boolExpr)


State 90

   15 stmt: RETURN exprs ';' .

    $default  reduce using rule 15 (stmt)


State 91

   33 cop: '<' .

    $default  reduce using rule 33 (cop)


State 92

   32 cop: '>' .

    $default  reduce using rule 32 (cop)


State 93

   31 cop: NEQ .

    $default  reduce using rule 31 (cop)


State 94

   30 cop: LE .

    $default  reduce using rule 30 (cop)


State 95

   29 cop: GE .

    $default  reduce using rule 29 (cop)


State 96

   28 cop: EQ .

    $default  reduce using rule 28 (cop)


State 97

   69 boolExpr: term cop . term conditions

    ID      shift, and go to state 72
    NUMBER  shift, and go to state 49
    '-'     shift, and go to state 54
    '^'     shift, and go to state 57

    term  go to state 116


State 98

   34 aop: '+' .

    $default  reduce using rule 34 (aop)


State 99

   35 aop: '-' .

    $default  reduce using rule 35 (aop)


State 100

   36 aop: '*' .

    $default  reduce using rule 36 (aop)


State 101

   37 aop: '/' .

    $default  reduce using rule 37 (aop)


State 102

   60 termPrime: aop . factor termPrime

    ID      shift, and go to state 72
    NUMBER  shift, and go to state 49
    '-'     shift, and go to state 54
    '('     shift, and go to state 55
    '^'     shift, and go to state 57
    '|'     shift, and go to state 58

    term    go to state 85
    factor  go to state 117


State 103

   55 numExprs: factor termPrime .

    $default  reduce using rule 55 (numExprs)


State 104

   27 sbarket: '[' numExprs . ']'

    ']'  shift, and go to state 118


State 105

    9 stmt: lhs '=' ID . '(' arguments ')' ';'
   18 exprs: ID . sbarket
   56 term: ID .

    '('  shift, and go to state 119
    '['  shift, and go to state 65

    $default  reduce using rule 56 (term)

    sbarket  go to state 78


State 106

    8 stmt: lhs '=' exprs . ';'

    ';'  shift, and go to state 120


State 107

   78 parameterPrime: ';' ID idPrime ':' returnType . parameterPrime

    ';'  shift, and go to state 25

    $default  reduce using rule 79 (parameterPrime)

    parameterPrime  go to state 121


State 108

   82 ifelseStmt: IF '(' boolExpr ')' . '{' stmts '}' ELSE '{' stmts '}'
   83 ifnoelseStmt: IF '(' boolExpr ')' . '{' stmts '}'

    '{'  shift, and go to state 122


State 109

   84 whileStmt: WHILE '(' boolExpr ')' . '{' stmts '}'

    '{'  shift, and go to state 123


State 110

   14 stmt: VAR ID idPrime ':' . declareType ';'

    BOOLEAN  shift, and go to state 124
    CHAR     shift, and go to state 125
    INTEGER  shift, and go to state 126
    STRING   shift, and go to state 127
    INTPTR   shift, and go to state 128
    CHARPTR  shift, and go to state 129

    declareType  go to state 130


State 111

   13 stmt: PROCEDURE ID '(' parameter . ')' RETURN type '{' stmts '}'

    ')'  shift, and go to state 131


State 112

   73 conditions: AND boolExpr .

    $default  reduce using rule 73 (conditions)


State 113

   74 conditions: OR boolExpr .

    $default  reduce using rule 74 (conditions)


State 114

   63 factor: '(' numExprs ')' .

    $default  reduce using rule 63 (factor)


State 115

   64 factor: '|' numExprs '|' .

    $default  reduce using rule 64 (factor)


State 116

   69 boolExpr: term cop term . conditions

    AND  shift, and go to state 79
    OR   shift, and go to state 80

    AND       [reduce using rule 75 (conditions)]
    OR        [reduce using rule 75 (conditions)]
    $default  reduce using rule 75 (conditions)

    conditions  go to state 132


State 117

   60 termPrime: aop factor . termPrime

    '+'  shift, and go to state 98
    '-'  shift, and go to state 99
    '*'  shift, and go to state 100
    '/'  shift, and go to state 101

    '+'       [reduce using rule 61 (termPrime)]
    '-'       [reduce using rule 61 (termPrime)]
    '*'       [reduce using rule 61 (termPrime)]
    '/'       [reduce using rule 61 (termPrime)]
    $default  reduce using rule 61 (termPrime)

    aop        go to state 102
    termPrime  go to state 133


State 118

   27 sbarket: '[' numExprs ']' .

    $default  reduce using rule 27 (sbarket)


State 119

    9 stmt: lhs '=' ID '(' . arguments ')' ';'

    ID       shift, and go to state 47
    NULLX    shift, and go to state 48
    NUMBER   shift, and go to state 49
    STRINGV  shift, and go to state 50
    CHARV    shift, and go to state 51
    TRUE     shift, and go to state 52
    FALSE    shift, and go to state 53
    '-'      shift, and go to state 54
    '('      shift, and go to state 55
    '&'      shift, and go to state 56
    '^'      shift, and go to state 57
    '|'      shift, and go to state 58
    '!'      shift, and go to state 59

    $default  reduce using rule 66 (arguments)

    exprs      go to state 134
    numExprs   go to state 61
    term       go to state 62
    factor     go to state 63
    arguments  go to state 135
    boolExpr   go to state 64


State 120

    8 stmt: lhs '=' exprs ';' .

    $default  reduce using rule 8 (stmt)


State 121

   78 parameterPrime: ';' ID idPrime ':' returnType parameterPrime .

    $default  reduce using rule 78 (parameterPrime)


State 122

   82 ifelseStmt: IF '(' boolExpr ')' '{' . stmts '}' ELSE '{' stmts '}'
   83 ifnoelseStmt: IF '(' boolExpr ')' '{' . stmts '}'

    IF         shift, and go to state 29
    WHILE      shift, and go to state 30
    VAR        shift, and go to state 31
    PROCEDURE  shift, and go to state 32
    RETURN     shift, and go to state 33
    ID         shift, and go to state 34
    '^'        shift, and go to state 35

    IF         [reduce using rule 16 (stmt)]
    WHILE      [reduce using rule 16 (stmt)]
    VAR        [reduce using rule 16 (stmt)]
    PROCEDURE  [reduce using rule 16 (stmt)]
    RETURN     [reduce using rule 16 (stmt)]
    ID         [reduce using rule 16 (stmt)]
    '^'        [reduce using rule 16 (stmt)]
    $default   reduce using rule 16 (stmt)

    stmts         go to state 136
    stmt          go to state 37
    lhs           go to state 38
    ifelseStmt    go to state 39
    ifnoelseStmt  go to state 40
    whileStmt     go to state 41


State 123

   84 whileStmt: WHILE '(' boolExpr ')' '{' . stmts '}'

    IF         shift, and go to state 29
    WHILE      shift, and go to state 30
    VAR        shift, and go to state 31
    PROCEDURE  shift, and go to state 32
    RETURN     shift, and go to state 33
    ID         shift, and go to state 34
    '^'        shift, and go to state 35

    IF         [reduce using rule 16 (stmt)]
    WHILE      [reduce using rule 16 (stmt)]
    VAR        [reduce using rule 16 (stmt)]
    PROCEDURE  [reduce using rule 16 (stmt)]
    RETURN     [reduce using rule 16 (stmt)]
    ID         [reduce using rule 16 (stmt)]
    '^'        [reduce using rule 16 (stmt)]
    $default   reduce using rule 16 (stmt)

    stmts         go to state 137
    stmt          go to state 37
    lhs           go to state 38
    ifelseStmt    go to state 39
    ifnoelseStmt  go to state 40
    whileStmt     go to state 41


State 124

   49 declareType: BOOLEAN .

    $default  reduce using rule 49 (declareType)


State 125

   51 declareType: CHAR .

    $default  reduce using rule 51 (declareType)


State 126

   50 declareType: INTEGER .

    $default  reduce using rule 50 (declareType)


State 127

   54 declareType: STRING . '[' NUMBER ']'

    '['  shift, and go to state 138


State 128

   53 declareType: INTPTR .

    $default  reduce using rule 53 (declareType)


State 129

   52 declareType: CHARPTR .

    $default  reduce using rule 52 (declareType)


State 130

   14 stmt: VAR ID idPrime ':' declareType . ';'

    ';'  shift, and go to state 139


State 131

   13 stmt: PROCEDURE ID '(' parameter ')' . RETURN type '{' stmts '}'

    RETURN  shift, and go to state 140


State 132

   69 boolExpr: term cop term conditions .

    $default  reduce using rule 69 (boolExpr)


State 133

   60 termPrime: aop factor termPrime .

    $default  reduce using rule 60 (termPrime)


State 134

   65 arguments: exprs . argumentsPrime

    ','  shift, and go to state 141

    $default  reduce using rule 68 (argumentsPrime)

    argumentsPrime  go to state 142


State 135

    9 stmt: lhs '=' ID '(' arguments . ')' ';'

    ')'  shift, and go to state 143


State 136

   82 ifelseStmt: IF '(' boolExpr ')' '{' stmts . '}' ELSE '{' stmts '}'
   83 ifnoelseStmt: IF '(' boolExpr ')' '{' stmts . '}'

    '}'  shift, and go to state 144


State 137

   84 whileStmt: WHILE '(' boolExpr ')' '{' stmts . '}'

    '}'  shift, and go to state 145


State 138

   54 declareType: STRING '[' . NUMBER ']'

    NUMBER  shift, and go to state 146


State 139

   14 stmt: VAR ID idPrime ':' declareType ';' .

    $default  reduce using rule 14 (stmt)


State 140

   13 stmt: PROCEDURE ID '(' parameter ')' RETURN . type '{' stmts '}'

    BOOLEAN  shift, and go to state 147
    CHAR     shift, and go to state 148
    INTEGER  shift, and go to state 149
    STRING   shift, and go to state 150
    INTPTR   shift, and go to state 151
    CHARPTR  shift, and go to state 152

    type  go to state 153


State 141

   67 argumentsPrime: ',' . exprs argumentsPrime

    ID       shift, and go to state 47
    NULLX    shift, and go to state 48
    NUMBER   shift, and go to state 49
    STRINGV  shift, and go to state 50
    CHARV    shift, and go to state 51
    TRUE     shift, and go to state 52
    FALSE    shift, and go to state 53
    '-'      shift, and go to state 54
    '('      shift, and go to state 55
    '&'      shift, and go to state 56
    '^'      shift, and go to state 57
    '|'      shift, and go to state 58
    '!'      shift, and go to state 59

    exprs     go to state 154
    numExprs  go to state 61
    term      go to state 62
    factor    go to state 63
    boolExpr  go to state 64


State 142

   65 arguments: exprs argumentsPrime .

    $default  reduce using rule 65 (arguments)


State 143

    9 stmt: lhs '=' ID '(' arguments ')' . ';'

    ';'  shift, and go to state 155


State 144

   82 ifelseStmt: IF '(' boolExpr ')' '{' stmts '}' . ELSE '{' stmts '}'
   83 ifnoelseStmt: IF '(' boolExpr ')' '{' stmts '}' .

    ELSE  shift, and go to state 156

    $default  reduce using rule 83 (ifnoelseStmt)


State 145

   84 whileStmt: WHILE '(' boolExpr ')' '{' stmts '}' .

    $default  reduce using rule 84 (whileStmt)


State 146

   54 declareType: STRING '[' NUMBER . ']'

    ']'  shift, and go to state 157


State 147

   38 type: BOOLEAN .

    $default  reduce using rule 38 (type)


State 148

   40 type: CHAR .

    $default  reduce using rule 40 (type)


State 149

   39 type: INTEGER .

    $default  reduce using rule 39 (type)


State 150

   42 type: STRING .

    $default  reduce using rule 42 (type)


State 151

   43 type: INTPTR .

    $default  reduce using rule 43 (type)


State 152

   41 type: CHARPTR .

    $default  reduce using rule 41 (type)


State 153

   13 stmt: PROCEDURE ID '(' parameter ')' RETURN type . '{' stmts '}'

    '{'  shift, and go to state 158


State 154

   67 argumentsPrime: ',' exprs . argumentsPrime

    ','  shift, and go to state 141

    $default  reduce using rule 68 (argumentsPrime)

    argumentsPrime  go to state 159


State 155

    9 stmt: lhs '=' ID '(' arguments ')' ';' .

    $default  reduce using rule 9 (stmt)


State 156

   82 ifelseStmt: IF '(' boolExpr ')' '{' stmts '}' ELSE . '{' stmts '}'

    '{'  shift, and go to state 160


State 157

   54 declareType: STRING '[' NUMBER ']' .

    $default  reduce using rule 54 (declareType)


State 158

   13 stmt: PROCEDURE ID '(' parameter ')' RETURN type '{' . stmts '}'

    IF         shift, and go to state 29
    WHILE      shift, and go to state 30
    VAR        shift, and go to state 31
    PROCEDURE  shift, and go to state 32
    RETURN     shift, and go to state 33
    ID         shift, and go to state 34
    '^'        shift, and go to state 35

    IF         [reduce using rule 16 (stmt)]
    WHILE      [reduce using rule 16 (stmt)]
    VAR        [reduce using rule 16 (stmt)]
    PROCEDURE  [reduce using rule 16 (stmt)]
    RETURN     [reduce using rule 16 (stmt)]
    ID         [reduce using rule 16 (stmt)]
    '^'        [reduce using rule 16 (stmt)]
    $default   reduce using rule 16 (stmt)

    stmts         go to state 161
    stmt          go to state 37
    lhs           go to state 38
    ifelseStmt    go to state 39
    ifnoelseStmt  go to state 40
    whileStmt     go to state 41


State 159

   67 argumentsPrime: ',' exprs argumentsPrime .

    $default  reduce using rule 67 (argumentsPrime)


State 160

   82 ifelseStmt: IF '(' boolExpr ')' '{' stmts '}' ELSE '{' . stmts '}'

    IF         shift, and go to state 29
    WHILE      shift, and go to state 30
    VAR        shift, and go to state 31
    PROCEDURE  shift, and go to state 32
    RETURN     shift, and go to state 33
    ID         shift, and go to state 34
    '^'        shift, and go to state 35

    IF         [reduce using rule 16 (stmt)]
    WHILE      [reduce using rule 16 (stmt)]
    VAR        [reduce using rule 16 (stmt)]
    PROCEDURE  [reduce using rule 16 (stmt)]
    RETURN     [reduce using rule 16 (stmt)]
    ID         [reduce using rule 16 (stmt)]
    '^'        [reduce using rule 16 (stmt)]
    $default   reduce using rule 16 (stmt)

    stmts         go to state 162
    stmt          go to state 37
    lhs           go to state 38
    ifelseStmt    go to state 39
    ifnoelseStmt  go to state 40
    whileStmt     go to state 41


State 161

   13 stmt: PROCEDURE ID '(' parameter ')' RETURN type '{' stmts . '}'

    '}'  shift, and go to state 163


State 162

   82 ifelseStmt: IF '(' boolExpr ')' '{' stmts '}' ELSE '{' stmts . '}'

    '}'  shift, and go to state 164


State 163

   13 stmt: PROCEDURE ID '(' parameter ')' RETURN type '{' stmts '}' .

    $default  reduce using rule 13 (stmt)


State 164

   82 ifelseStmt: IF '(' boolExpr ')' '{' stmts '}' ELSE '{' stmts '}' .

    $default  reduce using rule 82 (ifelseStmt)
